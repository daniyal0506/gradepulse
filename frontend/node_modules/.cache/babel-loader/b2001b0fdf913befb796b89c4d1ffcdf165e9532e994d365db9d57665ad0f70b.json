{"ast":null,"code":"var _jsxFileName = \"/Users/daniyalsiddiqui/Desktop/uic-gradepulse-react/src/components/Graphs/MiscGraph.js\";\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Container } from 'react-bootstrap';\nimport './Graph.css'; // Import the CSS file\n\nimport { Chart as ChartJS, BarElement, CategoryScale, LinearScale, Tooltip, Legend, Title } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(BarElement, CategoryScale, LinearScale, Tooltip, Legend, Title);\nconst MiscGraph = _ref => {\n  let {\n    chartData\n  } = _ref;\n  const data = {\n    labels: ['ADV', 'CR', 'DFR', 'I', 'NG', 'NR', 'O', 'PR', 'S', 'U', 'W'],\n    datasets: [{\n      label: 'Grade Distribution',\n      data: [chartData.ADV, chartData.CR, chartData.DFR, chartData.I, chartData.NG, chartData.NR, chartData.O, chartData.PR, chartData.S, chartData.U, chartData.W],\n      borderColor: 'black',\n      borderWidth: 1\n    }]\n  };\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Student Count',\n          font: {\n            size: 14,\n            weight: 'bold'\n          }\n        },\n        ticks: {\n          precision: 0 // Display whole numbers only\n        }\n      },\n\n      x: {\n        title: {\n          display: true,\n          text: 'Grade Definition',\n          font: {\n            size: 14,\n            weight: 'bold'\n          }\n        }\n      }\n    },\n    plugins: {\n      title: {\n        display: true,\n        text: 'Misc Data Bar Chart',\n        font: {\n          size: 16,\n          weight: 'bold'\n        }\n      },\n      legend: {\n        display: false\n      },\n      tooltip: {\n        callbacks: {\n          title: tooltipItem => {\n            const label = tooltipItem[0].label;\n            // Add your descriptions based on the label\n            switch (label) {\n              case 'ADV':\n                return 'Advanced';\n              case 'CR':\n                return 'Credit';\n              case 'DFR':\n                return 'Deferred';\n              case 'I':\n                return 'Incomplete';\n              case 'NG':\n                return 'No Grade';\n              case 'NR':\n                return 'Not Reported';\n              case 'O':\n                return 'Outstanding';\n              case 'PR':\n                return 'Pass/No Pass';\n              case 'S':\n                return 'Satisfactory';\n              case 'U':\n                return 'Unsatisfactory';\n              case 'W':\n                return 'Withdrawn';\n              default:\n                return '';\n            }\n          },\n          label: tooltipItem => {\n            const value = tooltipItem.formattedValue;\n            return `Student Count: ${value}`;\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"graph-container\",\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        className: \"graph-bar\",\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_c = MiscGraph;\nexport default MiscGraph;\nvar _c;\n$RefreshReg$(_c, \"MiscGraph\");","map":{"version":3,"names":["React","Bar","Container","Chart","ChartJS","BarElement","CategoryScale","LinearScale","Tooltip","Legend","Title","jsxDEV","_jsxDEV","Fragment","_Fragment","register","MiscGraph","_ref","chartData","data","labels","datasets","label","ADV","CR","DFR","I","NG","NR","O","PR","S","U","W","borderColor","borderWidth","options","responsive","maintainAspectRatio","scales","y","beginAtZero","title","display","text","font","size","weight","ticks","precision","x","plugins","legend","tooltip","callbacks","tooltipItem","value","formattedValue","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/daniyalsiddiqui/Desktop/uic-gradepulse-react/src/components/Graphs/MiscGraph.js"],"sourcesContent":["import React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Container } from 'react-bootstrap';\nimport './Graph.css'; // Import the CSS file\n\nimport {\n    Chart as ChartJS,\n    BarElement,\n    CategoryScale,\n    LinearScale,\n    Tooltip,\n    Legend,\n    Title\n} from 'chart.js';\n\nChartJS.register(\n    BarElement,\n    CategoryScale,\n    LinearScale,\n    Tooltip,\n    Legend,\n    Title\n);\n\nconst MiscGraph = ({ chartData }) => {\n    const data = {\n        labels: ['ADV', 'CR', 'DFR', 'I', 'NG', 'NR', 'O', 'PR', 'S', 'U', 'W'],\n        datasets: [\n            {\n                label: 'Grade Distribution',\n                data: [\n                    chartData.ADV,\n                    chartData.CR,\n                    chartData.DFR,\n                    chartData.I,\n                    chartData.NG,\n                    chartData.NR,\n                    chartData.O,\n                    chartData.PR,\n                    chartData.S,\n                    chartData.U,\n                    chartData.W,\n                ],\n                borderColor: 'black',\n                borderWidth: 1,\n            },\n        ],\n    };\n\n    const options = {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n            y: {\n                beginAtZero: true,\n                title: {\n                    display: true,\n                    text: 'Student Count',\n                    font: {\n                        size: 14,\n                        weight: 'bold',\n                    },\n                },\n                ticks: {\n                    precision: 0, // Display whole numbers only\n                },\n            },\n            x: {\n                title: {\n                    display: true,\n                    text: 'Grade Definition',\n                    font: {\n                        size: 14,\n                        weight: 'bold',\n                    },\n                },\n            },\n        },\n        plugins: {\n            title: {\n                display: true,\n                text: 'Misc Data Bar Chart',\n                font: {\n                    size: 16,\n                    weight: 'bold',\n                },\n            },\n            legend: {\n                display: false,\n            },\n            tooltip: {\n                callbacks: {\n                    title: (tooltipItem) => {\n                        const label = tooltipItem[0].label;\n                        // Add your descriptions based on the label\n                        switch (label) {\n                            case 'ADV':\n                                return 'Advanced';\n                            case 'CR':\n                                return 'Credit';\n                            case 'DFR':\n                                return 'Deferred';\n                            case 'I':\n                                return 'Incomplete';\n                            case 'NG':\n                                return 'No Grade';\n                            case 'NR':\n                                return 'Not Reported';\n                            case 'O':\n                                return 'Outstanding';\n                            case 'PR':\n                                return 'Pass/No Pass';\n                            case 'S':\n                                return 'Satisfactory';\n                            case 'U':\n                                return 'Unsatisfactory';\n                            case 'W':\n                                return 'Withdrawn';\n                            default:\n                                return '';\n                        }\n                    },\n                    label: (tooltipItem) => {\n                        const value = tooltipItem.formattedValue;\n                        return `Student Count: ${value}`;\n                    },\n                },\n            },\n        },\n    };\n\n    return (\n        <>\n            <Container className=\"graph-container\">\n                <Bar className=\"graph-bar\" data={data} options={options} />\n            </Container>\n        </>\n    );\n};\n\nexport default MiscGraph;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}